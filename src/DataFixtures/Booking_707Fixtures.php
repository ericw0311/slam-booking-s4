<?php
// App/DataFixtures/Booking_707Fixtures.php
namespace App\DataFixtures;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Common\Persistence\ObjectManager;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use App\Entity\File;
use App\Entity\User;
use App\Entity\Label;
use App\Entity\Resource;
use App\Entity\Planification;
use App\Entity\Booking;
use App\Entity\BookingLabel;

class Booking_707Fixtures extends Fixture implements DependentFixtureInterface
{
	public function load(ObjectManager $manager)
	{
	foreach ($this->getData() as [$id, $userID, $fileID, $planificationID, $resourceID, $activityID, $boNote, $stNote, $beginningDatetime, $endDatetime]) {
		$user = $this->getReference('user-1');
		$file = $this->getReference('file-'.$fileID);
		$planification = $this->getReference('planification-'.$planificationID);
		$resource = $this->getReference('resource-'.$resourceID);
		$booking = new Booking($user, $file, $planification, $resource);
		if ($boNote > 0) {
			$booking->setNote($stNote);
		}
		$booking->setBeginningDate(date_create_from_format('Y-m-d H:i:s',$beginningDatetime));
		$booking->setEndDate(date_create_from_format('Y-m-d H:i:s',$endDatetime));
		$manager->persist($booking);
		$manager->flush();
		$this->addReference('bookingHeader-'.$id, $booking); // L'ID est un bookingHeaderID dans le modèle Slam-Data
		if ($activityID > 0) {
			$label = $this->getReference('activity-'.$activityID);
			$bookingLabel = new BookingLabel($user, $booking, $label);
			$bookingLabel->setOrder(1);
			$manager->persist($bookingLabel);
			$manager->flush();
		}
	}
    }

	private function getData(): array
    {
	return [
// $data = [$id, $userID, $fileID, $planificationID, $resourceID, $activityID, $boNote, $stNote, $beginningDatetime, $endDatetime]
[14185, 1, 707, 550, 2465, 0, 0, '', '2016-11-03 08:00:00', '2016-11-03 09:00:00'],
[14260, 1, 707, 551, 2485, 0, 0, '', '2016-11-11 18:00:00', '2016-11-11 19:00:00'],
[14309, 1, 707, 550, 2465, 153, 0, '', '2016-11-11 08:00:00', '2016-11-11 17:00:00'],
[14310, 1, 707, 550, 2465, 153, 0, '', '2016-11-10 10:00:00', '2016-11-10 17:00:00'],
[14311, 1, 707, 550, 2465, 153, 0, '', '2016-11-09 13:00:00', '2016-11-09 23:00:00'],
[14312, 1, 707, 550, 2465, 0, 0, '', '2016-11-11 18:00:00', '2016-11-11 20:00:00'],
[14313, 1, 707, 550, 2465, 153, 0, '', '2016-11-11 21:00:00', '2016-11-11 23:00:00'],
[14359, 1, 707, 550, 2465, 0, 0, '', '2016-11-12 14:00:00', '2016-11-12 15:00:00'],
[14361, 1, 707, 550, 2465, 0, 0, '', '2016-11-12 15:00:00', '2016-11-12 16:00:00'],
[14633, 1, 707, 550, 2465, 0, 0, '', '2016-11-26 10:00:00', '2016-11-26 11:00:00'],
[14634, 1, 707, 550, 2465, 0, 0, '', '2016-11-26 11:00:00', '2016-11-26 12:00:00'],
[14696, 1, 707, 550, 2465, 0, 0, '', '2016-12-03 14:00:00', '2016-12-03 15:00:00'],
[14697, 1, 707, 550, 2465, 0, 0, '', '2016-12-03 15:00:00', '2016-12-03 16:00:00'],
[14698, 1, 707, 550, 2465, 0, 0, '', '2016-12-03 16:00:00', '2016-12-03 17:00:00'],
[14699, 1, 707, 550, 2465, 0, 0, '', '2016-12-03 17:00:00', '2016-12-03 18:00:00'],
[14964, 1, 707, 550, 2465, 0, 0, '', '2016-12-15 20:00:00', '2016-12-15 21:00:00'],
[15031, 1, 707, 550, 2465, 153, 0, '', '2016-12-20 10:00:00', '2016-12-20 17:00:00'],
[15032, 1, 707, 550, 2465, 153, 0, '', '2016-12-21 13:00:00', '2016-12-21 23:00:00'],
[15033, 1, 707, 550, 2465, 153, 0, '', '2016-12-22 10:00:00', '2016-12-22 17:00:00'],
[15034, 1, 707, 550, 2465, 153, 0, '', '2016-12-23 08:00:00', '2016-12-23 17:00:00'],
[15035, 1, 707, 550, 2465, 153, 0, '', '2016-12-27 10:00:00', '2016-12-27 17:00:00'],
[15036, 1, 707, 550, 2465, 153, 0, '', '2016-12-28 13:00:00', '2016-12-28 23:00:00'],
[15037, 1, 707, 550, 2465, 153, 0, '', '2016-12-29 10:00:00', '2016-12-29 17:00:00'],
[15038, 1, 707, 550, 2465, 153, 0, '', '2016-12-30 08:00:00', '2016-12-30 17:00:00'],
[15056, 1, 707, 550, 2465, 0, 0, '', '2016-12-20 17:00:00', '2016-12-20 18:00:00'],
[15057, 1, 707, 550, 2465, 0, 0, '', '2016-12-20 18:00:00', '2016-12-20 19:00:00'],
[15160, 1, 707, 550, 2465, 0, 0, '', '2016-12-27 20:00:00', '2016-12-27 21:00:00'],
[15161, 1, 707, 550, 2465, 0, 0, '', '2016-12-27 21:00:00', '2016-12-27 22:00:00'],
[15352, 1, 707, 550, 2465, 0, 0, '', '2017-01-07 15:00:00', '2017-01-07 16:00:00'],
[15353, 1, 707, 550, 2465, 0, 0, '', '2017-01-07 16:00:00', '2017-01-07 17:00:00'],
[17310, 1, 707, 551, 2485, 0, 0, '', '2017-04-13 17:00:00', '2017-04-13 18:00:00'],
[18070, 1, 707, 551, 2485, 0, 0, '', '2017-06-04 14:00:00', '2017-06-04 15:00:00'],
[18071, 1, 707, 551, 2485, 0, 0, '', '2017-06-04 15:00:00', '2017-06-04 16:00:00'],
[18481, 1, 707, 550, 2465, 0, 0, '', '2017-07-01 18:00:00', '2017-07-01 20:00:00'],
[18542, 1, 707, 551, 2485, 0, 0, '', '2017-07-06 18:00:00', '2017-07-06 19:00:00'],
[18543, 1, 707, 551, 2485, 0, 0, '', '2017-07-06 19:00:00', '2017-07-06 20:00:00'],
[18593, 1, 707, 551, 2485, 0, 0, '', '2017-07-12 19:00:00', '2017-07-12 20:00:00'],
[18594, 1, 707, 551, 2485, 0, 0, '', '2017-07-12 20:00:00', '2017-07-12 21:00:00'],
[18642, 1, 707, 551, 2485, 0, 0, '', '2017-07-17 19:00:00', '2017-07-17 20:00:00'],
[18643, 1, 707, 551, 2485, 0, 0, '', '2017-07-17 20:00:00', '2017-07-17 21:00:00'],
[18644, 1, 707, 551, 2485, 0, 0, '', '2017-07-17 21:00:00', '2017-07-17 22:00:00'],
[20538, 1, 707, 550, 2465, 0, 0, '', '2017-10-29 10:00:00', '2017-10-29 11:00:00'],
[20539, 1, 707, 550, 2465, 0, 0, '', '2017-10-29 11:00:00', '2017-10-29 12:00:00'],
[21611, 1, 707, 550, 2465, 153, 0, '', '2018-01-25 17:00:00', '2018-01-25 23:00:00'],
[22820, 1, 707, 550, 2465, 151, 0, '', '2018-03-18 15:00:00', '2018-03-18 16:00:00'],
[22821, 1, 707, 550, 2465, 0, 0, '', '2018-03-18 16:00:00', '2018-03-18 17:00:00'],
[22961, 1, 707, 550, 2465, 0, 0, '', '2018-03-24 08:00:00', '2018-03-24 09:00:00'],
[22962, 1, 707, 550, 2465, 153, 0, '', '2018-03-25 08:00:00', '2018-03-25 09:00:00'],
[22963, 1, 707, 550, 2465, 153, 0, '', '2018-03-25 09:00:00', '2018-03-25 23:00:00'],
[22964, 1, 707, 550, 2465, 153, 0, '', '2018-03-24 09:00:00', '2018-03-24 23:00:00'],
[22965, 1, 707, 550, 2465, 153, 0, '', '2018-04-08 08:00:00', '2018-04-08 23:00:00'],
[23355, 1, 707, 550, 2465, 153, 0, '', '2018-04-15 08:00:00', '2018-04-15 23:00:00'],
[23356, 1, 707, 550, 2465, 153, 0, '', '2018-05-06 08:00:00', '2018-05-06 17:00:00'],
[23357, 1, 707, 551, 2485, 153, 0, '', '2018-05-06 08:00:00', '2018-05-06 17:00:00'],
[24101, 1, 707, 551, 2485, 0, 0, '', '2018-06-06 19:00:00', '2018-06-06 20:00:00'],
[24102, 1, 707, 551, 2485, 0, 0, '', '2018-06-06 20:00:00', '2018-06-06 21:00:00'],
[24103, 1, 707, 550, 2465, 0, 0, '', '2018-06-02 14:00:00', '2018-06-02 15:00:00'],
[24104, 1, 707, 550, 2465, 0, 0, '', '2018-06-02 15:00:00', '2018-06-02 16:00:00'],
[24105, 1, 707, 550, 2465, 0, 0, '', '2018-06-02 18:00:00', '2018-06-02 19:00:00'],
[24106, 1, 707, 550, 2465, 0, 0, '', '2018-06-02 19:00:00', '2018-06-02 20:00:00'],
[24109, 1, 707, 550, 2465, 0, 0, '', '2018-06-03 10:00:00', '2018-06-03 11:00:00'],
[24110, 1, 707, 550, 2465, 0, 0, '', '2018-06-03 11:00:00', '2018-06-03 12:00:00'],
[24279, 1, 707, 551, 2485, 0, 0, '', '2018-06-16 09:00:00', '2018-06-16 10:00:00'],
[24280, 1, 707, 551, 2485, 0, 0, '', '2018-06-16 10:00:00', '2018-06-16 12:00:00'],
[24301, 1, 707, 551, 2485, 0, 0, '', '2018-06-14 19:00:00', '2018-06-14 21:00:00'],
[24426, 1, 707, 551, 2485, 0, 0, '', '2018-06-19 18:00:00', '2018-06-19 20:00:00'],
[24427, 1, 707, 551, 2485, 0, 0, '', '2018-06-28 10:00:00', '2018-06-28 12:00:00'],
[24428, 1, 707, 551, 2485, 0, 0, '', '2018-06-27 18:00:00', '2018-06-27 20:00:00'],
[25231, 1, 707, 551, 2485, 0, 0, '', '2018-09-11 19:00:00', '2018-09-11 21:00:00'],
[25326, 1, 707, 551, 2485, 0, 0, '', '2018-09-16 17:00:00', '2018-09-16 19:00:00'],
	];
    }

	public function getDependencies()
	{
		return array(FileFixtures::class, UserFixtures::class, ResourceFixtures::class, PlanificationFixtures::class, LabelFixtures::class);
    }
}